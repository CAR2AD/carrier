using carrier::sha256;
using string;
using hex;
using <stdio.h>::{printf, strlen, fgets, stdin};

test {
    stdin = "abc"
    stdout = "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
}

test {
    stdin = "\na\nb\nc\n"
    stdout = "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
}

test {
    stdin = ""
    stdout = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
}

test {
    stdin = "\n\n\n\n\n\n\n\n"
    stdout = "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
}

test {
    stdin = "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
    stdout = "248d6a61d20638b8e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1"
}

test {
    stdin = "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
    stdout = "cf5b16a778af8380036ce59e7b0492370b249b11e8f07a51afac45037afee9d1"
}

test {
    stdin = "abcdefghbcdefg\nhicdefghijdefghijkefghijkl\nfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsm\nnopqrstnopqrstu\n"
    stdout = "cf5b16a778af8380036ce59e7b0492370b249b11e8f07a51afac45037afee9d1"
}


pub fn main() -> int {

    new s1 = sha256::init();

    for (;;) {
        char mut line[1000];

        char *rr = (char*)fgets(line, sizeof(line), stdin);
        if rr == 0 {
            break;
        }

        static_attest(safe(line));
        static_attest(nullterm(line));

        usize mut l = string::strlen(line);

        if line[l-1] == '\n' {
            line[l-1] = 0;
            l -= 1;
        }
        static_attest(l < len(line));

        s1.update((u8*)line, l);
    }

    u8 mut output[32] = {0};
    s1.finish(output);

    for (usize mut i = 0 ; i < 32 ; i++) {
        printf("%02x", output[i]);
    }


    return 0;
}
