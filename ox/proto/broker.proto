syntax = "proto3";
package ox.broker.v1;

message AnnounceRequest {
}

message AnnounceResponse {
    bool ok = 1;
}

message PublishRequest {
    string address   = 1;
    bytes  value     = 2;
}

message PublishResponse {
    bool ok = 1;
}

message SubscribeRequest {
    string address   = 1;
}

message SubscribeStream {
    string identity  = 1;
    bytes  value     = 2;
}

message Connect1Request {
    string  target  = 1;
    uint64  channel = 2;
    bytes   kex     = 3;
}

message Connect1Response {
    bool    ok      = 1;
}

message Connect2Request {
    string  source  = 1;
    uint64  channel = 2;
    bytes   kex     = 3;

    uint64  proxy_mine   = 4;
    uint64  proxy_them   = 5;
}

message Connect2Response {
    uint64 token   = 1;
    uint64 channel = 2;
}

service Broker {
    rpc connect(Connect1Request)        returns (Connect1Response)  {}
    rpc publish(PublishRequest)         returns (PublishResponse)   {}
    rpc subscribe(SubscribeRequest)     returns (stream SubscribeStream)   {}
}
