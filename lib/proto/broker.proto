syntax = "proto3";
package ox.broker.v1;

message AnnounceRequest {
}

message AnnounceResponse {
    bool ok = 1;
}

message PublishRequest {
    string address   = 1;
    bytes  value     = 2;
}

message PublishResponse {
    bool ok = 1;
}

message SubscribeRequest {
    string address   = 1;
}

message SubscribeStream {
    string identity  = 1;
    bytes  value     = 2;
}

message ConnectRequest {
    string  identity = 1;
    bytes   address  = 2;
    uint64  channel  = 3;
}

message ConnectResponse {
    bool    ok      = 1;
}

message ListenRequest {
    uint64  from_channel = 1;
    uint64  to_channel   = 2;
}

message ListenStream {

    string  identity     = 1;
    bytes   address      = 2;

    uint64  channel_mine = 3;
    uint64  channel_them = 4;
    uint64  proxy_mine   = 5;
    uint64  proxy_them   = 6;
}

message Connect2Response {
    uint64 token   = 1;
    uint64 channel = 2;
}

service Broker {
    rpc connect(ConnectRequest)             returns (ConnectResponse)           {}
    rpc listen(ListenRequest)               returns (stream ListenStream)       {}
    rpc publish(PublishRequest)             returns (PublishResponse)           {}
    rpc subscribe(SubscribeRequest)         returns (stream SubscribeStream)    {}
}
